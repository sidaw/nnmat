#!/usr/bin/env ruby

# This project depends on various models and jar files.
# Copy them to the lib directory.
# Periodically update this.

# Copy or link |sourcePath| into lib/|dir|.
def pull(sourcePath, dir=nil, opts={})
  puts sourcePath
  destDir = opts[:libDir] ? opts[:libDir] : "lib"
  destDir += '/' + dir if dir
  system "mkdir -p #{destDir}"

  name = File.basename(sourcePath)
  if File.exists?(sourcePath)
    if opts[:symlink]
      system "ln -sf #{File.expand_path(sourcePath)} #{destDir}" or exit 1
    else
      system "rsync -arzLi #{sourcePath} #{destDir}" or exit 1
    end
  else
   system "rsync -arzLi jamie:#{sourcePath} #{destDir}" or exit 1
  end
end

# source: path to master git repository
def updateGit(source)
  dir = File.basename(source.sub(/\.git$/, ''))
  if File.exists?(dir)
    system 'cd '+dir+' && git pull' or exit 1
  else
    system 'git clone ' + source or exit 1
  end
end

# Download file into lib (if not downloaded already).
def download(url, opts={})
  destDir = opts[:libDir] ? opts[:libDir] : "lib"
  system "wget -c '#{url}' -O #{destDir}/#{File.basename(url)}" or exit 1
end

# Update modules

updateGit('https://github.com/froystig/pystig')
pull('pystig', nil, {:symlink => true, :libDir => 'src/py'})

updateGit('https://github.com/danielfrg/word2vec')
pull('word2vec/word2vec', nil, {:symlink => true, :libDir => 'src/py'})

# Note: Uses an old version of Google's word2vec code.  Replace with
# SVN trunk, but update the makefile so it looks like the custom
# one from danielfrg's repo. :(

# As a bonus, also sed away some bugs from the Python code while we're
# at it.

if !File.exists?('word2vec/word2vec-src/.svn')
  system "\
  cd word2vec && \
  rm -r word2vec-src && \
  svn checkout http://word2vec.googlecode.com/svn/trunk/ && \
  cd trunk && sed -E -i.bkp 's/\\-o /\\-o \\.\\.\\/bin\\//g' makefile && cd .. && \
  mv trunk word2vec-src && \
  mkdir -p bin && \
  make -C word2vec-src && \
  cd word2vec && \
  sed -E -i.bkp 's/fin\\.read\\(1\\)  \\# newline/# \\0/' io.py && \
  sed -E -i.bkp 's/np\\.float\\)/np\\.float32\\)/' io.py && \
  cd .."
end

pull('~rfrostig/scr/datasets/mnist', nil, {:libDir => 'datasets'})
pull('~rfrostig/scr/datasets/cifar', nil, {:libDir => 'datasets'})

# Adjacency matrices

pull('~rfrostig/scr/datasets/adj', nil, {:libDir => '.'})
